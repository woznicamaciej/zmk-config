/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
        };

        Thumbs_layer: Thumbs_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMBS_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <37 40 36 38 39 41>;
            require-prior-idle-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB    &kp Q              &kp W                &kp E            &kp R                &kp T        &kp Y      &kp U                 &kp I        &kp O         &kp P            &kp BSPC
&kp LCTRL  &hml LEFT_SHIFT A  &hml LEFT_CONTROL S  &hml LEFT_ALT D  &hml LEFT_COMMAND F  &kp G        &kp H      &hmr RIGHT_COMMAND J  &hmr RALT K  &hmr RCTRL L  &hmr RSHFT SEMI  &kp SQT
&kp LSHFT  &kp Z              &kp X                &kp C            &kp V                &kp B        &kp N      &kp M                 &kp COMMA    &kp DOT       &kp FSLH         &kp ESC
                                                   &kp LGUI         &Thumbs_layer 1 ESC  &kp ENTER    &kp SPACE  &Thumbs_layer 2 TAB   &kp BSPC
            >;
        };

        left {
            bindings = <
&kp TAB    &kp K_MUTE                   &kp GREATER_THAN         &kp LEFT_BRACKET          &kp RIGHT_BRACKET              &kp C_PLAY_PAUSE    &none          &kp AMPERSAND              &kp ASTERISK            &kp LEFT_PARENTHESIS      &kp PLUS                &kp BSPC
&kp LCTRL  &hml LEFT_SHIFT C_VOLUME_UP  &hml LEFT_CONTROL EQUAL  &hml LEFT_ALT LEFT_BRACE  &hml LEFT_COMMAND RIGHT_BRACE  &kp C_NEXT          &kp BACKSLASH  &hmr RIGHT_COMMAND DOLLAR  &hmr RIGHT_ALT PERCENT  &hmr RIGHT_CONTROL CARET  &hmr RIGHT_SHIFT MINUS  &none
&kp LSHFT  &kp C_VOL_DN                 &none                    &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS          &kp C_PREV          &kp PIPE       &kp EXCLAMATION            &kp AT_SIGN             &kp POUND                 &kp RIGHT_PARENTHESIS   &kp ESC
                                                                 &kp LGUI                  &trans                         &kp ENTER           &kp SPACE      &mo 3                      &kp DEL
            >;
        };

        right {
            bindings = <
&kp TAB    &none  &none    &kp UP_ARROW    &none           &kp C_BRIGHTNESS_INC    &kp SINGLE_QUOTE   &kp N7                  &kp N8              &kp N9                  &kp EQUAL               &kp BSPC
&kp LCTRL  &none  &kp LEFT  &kp DOWN       &kp RIGHT         &kp C_BRIGHTNESS_DEC    &kp DOUBLE_QUOTES  &hmr RIGHT_COMMAND N4   &hmr RIGHT_ALT N5   &hmr RIGHT_CONTROL N6   &hmr RIGHT_SHIFT COMMA  &none
&kp LSHFT  &none  &none     &kp LESS_THAN  &kp GREATER_THAN  &none                   &kp GRAVE          &kp N1                  &kp N2              &kp N3                  &kp N0                  &kp ESC
                            &kp LGUI       &mo 3             &kp ENTER               &kp SPACE          &trans  &kp BSPC
            >;
        };

        system {
            bindings = <
&kp F1          &kp F2         &kp F3         &kp F4         &kp F5         &kp F6           &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &none   &none   &none  &trans   &trans   &trans
&bt BT_CLR_ALL  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans  &trans  &trans  &trans   &trans   &kp C_POWER
                                              &trans         &trans         &trans           &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
